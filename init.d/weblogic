#!/bin/bash
#
# WebLogic Startup script
#
# chkconfig: - 75 15
# description: weblogic

# Source function library
. /etc/rc.d/init.d/functions

# Start user-defined environment
DOMAIN_HOME=/home/tduong/cots/weblogic/12.2.1.4/user_projects/domains/basicWLSDomain
MW_HOME=/home/tduong/cots/weblogic/12.2.1.4
JAVA_HOME=/home/tduong/cots/jdk/1.8.0_251
# End user-defined environment

SERVICE_NAME=`/bin/basename $0`

declare -A USER_PORT_MAP=( ["tduong"]="7010" ["tester"]="7020")
declare -A START_LOG_MAP 

get_domain_home() {

	WL_USER=$1
	WL_PORT=$2
	local domain_home="/home/$WL_USER/weblogic/domains/${WL_USER}_${WL_PORT}"
	echo "$domain_home"
}

scan_log_file() {

	LOG_FILE=$1
	SEARCH_STRING="<Server state changed to RUNNING.>"
	
	res=$(cat "$LOG_FILE" | fgrep -c "$SEARCH_STRING")
	
	count=600 # 10 mins
	
	while [[ ! $res -gt 0 ]] && [[ $count -gt 0 ]]
	do
		sleep 1
		count=$(($count - 1))
		res=$(cat "$LOG_FILE" | fgrep -c "$SEARCH_STRING")
	done
	
	res=$(cat "$LOG_FILE" | fgrep -c "$SEARCH_STRING")
	if [ ! $res -gt 0 ]; then
		echo "FAILED or took too long time to start. Please check $LOG_FILE for more information."
	else
		echo "OK"
    	fi
}

wl_start() {
	
	WL_USER=$1
	WL_PORT=$2

	DOMAIN_HOME=`get_domain_home $WL_USER $WL_PORT`
	
	STARTWL_CMD="$DOMAIN_HOME/bin/startWebLogic.sh"
	
	# Check if weblogic is already running
	OLD_PID=`/usr/bin/pgrep -f $STARTWL_CMD`
	if [ ! -z "$OLD_PID" ]; then
		echo "WebLogic is already running for '$WL_USER' on port '$WL_PORT' (pid=$OLD_PID)!"
		echo
		exit
        fi

	echo -n $"Starting Weblogic Admin Server for '$WL_USER' on port '$WL_PORT'... "
	
	NOW=$(date +"%Y_%m_%d_%H_%M_%S")
	LOGFILE="/tmp/wlstart_${WL_USER}_${WL_PORT}_$NOW.log"
	
	su - $WL_USER -c "$STARTWL_CMD > $LOGFILE 2>&1 &"
	
	RETVAL=$?
	if [ $RETVAL -eq 0 ] ; then
	 	START_LOG_MAP["${WL_USER}_${WL_PORT}"]=$LOGFILE
	 	echo
        else
        	START_LOG_MAP["${WL_USER}_${WL_PORT}"]=""
        	echo "ERROR"
        fi        	
}

wl_stop() {

	WL_USER=$1
	WL_PORT=$2

	DOMAIN_HOME=`get_domain_home $WL_USER $WL_PORT`

	echo -n $"Stopping Weblogic Admin Server for '$WL_USER' on port '$WL_PORT'... "
	
	NOW=$(date +"%Y_%m_%d_%H_%M_%S")
	LOGFILE="/tmp/wl_stop_$NOW.log"
	
	su - $WL_USER -c "$DOMAIN_HOME/bin/stopWebLogic.sh > $LOGFILE 2>&1 "
	
	RETVAL=$?
        if [ $RETVAL -eq 0 ] ; then
		echo "OK"
        else
        	echo "FAILED"
        fi
}

wl_restart() {

	WL_USER=$1
	WL_PORT=$2
	
	echo $"Restart Weblogic Admin Server for '$WL_USER' on port '$WL_PORT'..."
	wl_stop $WL_USER $WL_PORT
	wl_start $WL_USER $WL_PORT
}

wl_status() {

	WL_USER=$1
	WL_PORT=$2

	DOMAIN_HOME=`get_domain_home $WL_USER $WL_PORT`
	
	STARTWL_CMD="$DOMAIN_HOME/bin/startWebLogic.sh"
	
	PID=`/usr/bin/pgrep -f $STARTWL_CMD`
	if [ ! -z "$PID" ]; then
        	echo "WebLogic for '$WL_USER' on port '$WL_PORT': running (pid=$PID)"
        else
        	echo "WebLogic for '$WL_USER' on port '$WL_PORT': stopped"
        fi
}
     

case "$1" in
	start)
		for usr in "${!USER_PORT_MAP[@]}"; do
			port=${USER_PORT_MAP[$usr]}
			wl_start $usr $port
		done
		
		echo "Checking status of launched WebLogic Admin Servers, please wait..."
		for key in "${!START_LOG_MAP[@]}"; do
			logfile=${START_LOG_MAP[$key]}
			if [ -z "$logfile" ]; then
				echo "-- $key: FAILED"
			else
				res=`scan_log_file $logfile`
				echo "-- $key: $res"
			fi
		done
		
		;;
	stop)
		for usr in "${!USER_PORT_MAP[@]}"; do
			port=${USER_PORT_MAP[$usr]}
			wl_stop $usr $port
		done
		;;
	status)
		for usr in "${!USER_PORT_MAP[@]}"; do
			port=${USER_PORT_MAP[$usr]}
			wl_status $usr $port
		done
		;;
	restart)
		for usr in "${!USER_PORT_MAP[@]}"; do
			port=${USER_PORT_MAP[$usr]}
			wl_restart $usr $port
		done
		;;
	*)
		echo $"Usage: $SERVICE_NAME start | stop | restart"
		exit 1
esac

exit 0
